@model MediterraneoBack.Models.NewOrderView

@{
    ViewBag.Title = "NUEVA ORDEN";
}

@*<h2>NUEVA ORDEN</h2>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.SalespersonId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SalespersonId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SalespersonId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DiscountId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("DiscountId", null, htmlAttributes: new { @class = "form-control", onchange = "this.form.submit();" })
                        @Html.ValidationMessageFor(model => model.DiscountId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @using (Html.BeginForm("Create", "Orders", FormMethod.Post))
                        {
                            <input type="submit" value="Save Order" class="btn btn-primary" onclick="Confirm()" />
                        }
                        @*<input type="submit" value="Save Order" class="btn btn-primary" onclick="return confirm('DESEA ENVIAR LA PROFORMA AL CLIENTE?')" />*@                       
                        @Html.ActionLink("Productos X Codigo", "AddProduct", "Orders", new { }, new { @class = "dialog-window btn btn-info" })
                        @Html.ActionLink("Productos X Nombre", "AddProductDescr", "Orders", new { }, new { @class = "dialog-window btn btn-info" })
                        @Html.ActionLink("Back to Orders", "Index", new { }, new { @class = "btn btn-success" })
                    </div>
                </div>
            </div>


        </div>

    </div>
}

<table class="table">
    <tr>
        <td colspan="5" align="center">
            <strong>TOTAL</strong>
        </td>
    </tr>

    <tr align="left">
        <td align="center">
            <strong>CANTIDAD DE ARTICULOS: @Html.DisplayFor(modelItem => Model.TotalQuantity)</strong>
        </td>
    </tr>

    <tr align="left">
        <td align="center">
            <strong>TOTAL BRUTO: @Html.DisplayFor(modelItem => Model.TotalBruto)</strong>
        </td>
    </tr>

    @{


        switch (Model.DiscountId)
        {
            case 1:
                <tr align="left">
                    <td align="center">
                        <strong>Descuento: RD$@(Model.TotalBruto * 0.00) </strong>
                    </td>
                </tr>
                break;
            case 2:
                <tr align="left">
                    <td align="center">
                        <strong>Descuento: RD$@( Model.TotalBruto * 0.10) </strong>
                    </td>
                </tr>
                break;
            case 3:
                <tr align="left">
                    <td align="center">
                        <strong>Descuento: RD$@(Model.TotalBruto * 0.150) </strong>
                    </td>
                </tr>
                break;
            case 4:
                <tr align="left">
                    <td align="center">
                        <strong>Descuento: RD$@(Model.TotalBruto * 0.180)</strong>
                    </td>
                </tr>
                break;
            case 5:
                <tr align="left">
                    <td align="center">
                        <strong>Descuento: RD$@(Model.TotalBruto * 0.250)</strong>
                    </td>
                </tr>
                break;

            default:
                <tr align="left">
                    <td align="center">
                        <strong>Descuento: RD$@(Model.TotalBruto * 0.00) </strong>
                    </td>
                </tr>
                break;
        }
    }

    @{


        switch (Model.DiscountId)
        {
            case 1:
                <tr align="left">
                    <td align="center">
                        <strong>ITBIS:  RD$@((Model.TotalBruto - Model.TotalBruto * 0) * 0.18) </strong>
                    </td>
                </tr>
                break;
            case 2:
                <tr align="left">
                    <td align="center">
                        <strong>ITBIS:   @((Model.TotalBruto - Model.TotalBruto * 0.1) * 0.18)  </strong>
                    </td>
                </tr>
                break;
            case 3:
                <tr align="left">
                    <td align="center">
                        <strong>ITBIS:  RD$@((Model.TotalBruto - Model.TotalBruto * 0.15) * 0.18)  </strong>
                    </td>
                </tr>
                break;
            case 4:
                <tr align="left">
                    <td align="center">
                        <strong>ITBIS:  RD$@((Model.TotalBruto - Model.TotalBruto * 0.18) * 0.18) </strong>
                    </td>
                </tr>
                break;
            case 5:
                <tr align="left">
                    <td align="center">
                        <strong>ITBIS:  RD$@((Model.TotalBruto - Model.TotalBruto * 0.25) * 0.18) </strong>
                    </td>
                </tr>
                break;

            default:
                <tr align="left">
                    <td align="center">
                        <strong>ITBIS:  RD$@((Model.TotalBruto - Model.TotalBruto * 0) * 0.18) </strong>
                    </td>
                </tr>
                break;
        }
    }

    @{


        switch (Model.DiscountId)
        {
            case 1:
                <tr align="left">
                    <td align="center">
                        <strong> <font size="5">VALOR NETO:  RD$@((Model.TotalBruto - Model.TotalBruto * 0) + ((Model.TotalBruto - Model.TotalBruto * 0) * 0.18)) </font></strong>
                    </td>
                </tr>
                break;
            case 2:
                <tr align="left">
                    <td align="center">
                        <strong> <font size="5">VALOR NETO:  RD$@((Model.TotalBruto - Model.TotalBruto * 0.1) + ((Model.TotalBruto - Model.TotalBruto * 0.1) * 0.18)) </font> </strong>
                    </td>
                </tr>
                break;
            case 3:
                <tr align="left">
                    <td align="center">
                        <strong> <font size="5">VALOR NETO:  RD$@((Model.TotalBruto - Model.TotalBruto * 0.15) + ((Model.TotalBruto - Model.TotalBruto * 0.15) * 0.18)) </font></strong>
                    </td>
                </tr>
                break;
            case 4:
                <tr align="left">
                    <td align="center">
                        <strong> <font size="5">VALOR NETO:  RD$@((Model.TotalBruto - Model.TotalBruto * 0.18) + ((Model.TotalBruto - Model.TotalBruto * 0.18) * 0.18))</font></strong>
                    </td>
                </tr>
                break;
            case 5:
                <tr align="left">
                    <td align="center">
                        <strong> <font size="5">VALOR NETO: RD$@((Model.TotalBruto - Model.TotalBruto * 0.25) + ((Model.TotalBruto - Model.TotalBruto * 0.25) * 0.18))</font></strong>
                    </td>
                </tr>
                break;

            default:
                <tr align="left">
                    <td align="center">
                        <strong> <font size="5">VALOR NETO:  RD$@((Model.TotalBruto - Model.TotalBruto * 0) + ((Model.TotalBruto - Model.TotalBruto * 0) * 0.18)) </font></strong>
                    </td>
                </tr>
                break;
        }
    }
    @*<tr align="left">
            <td align="center">
                <strong>VALOR NETO: @Html.DisplayFor(modelItem => Model.TotalBruto)</strong>
            </td>
        </tr>*@
</table>
@*<h4>DETALLES</h4>*@
<hr />
@if (Model.Details.Count == 0)
{
    <h5>No details added yet</h5>
}
else
{
    <table class="table">
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.Details[0].Product.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].BarCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].TaxRate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Value)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Product.Stock)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Details)
        {
            <tr>

                <td>
                    @if (!string.IsNullOrEmpty(item.Product.Image))
                    {
                        <img src="@Url.Content(item.Product.Image)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BarCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.TaxRate)
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.Product.Stock)
                </td>
                <td>
                    @Html.ActionLink("Delete", "DeleteProduct", new { id = item.ProductId }, new { @class = "btn btn-danger", onclick = "return confirm( 'Are you sure to delete this record?')" })
                </td>
            </tr>
        }

        @*<tr>

                <td colspan="5" align="right">
                    <strong>Total</strong>
                </td>
                <td align="center">
                    <strong> @Html.DisplayFor(modelItem => Model.TotalQuantity)</strong>
                </td>
                <td align="center">
                    <strong>@Html.DisplayFor(modelItem => Model.TotalValue)</strong>
                </td>
            </tr>*@

    </table>

}

<div class="modal fade" tabindex="-2" role="dialog" id="AddProduct" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="false">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                @*<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>*@
                <h2 @*class="modal-title"*@> Agregar Productos </h2>
            </div>

            <div class="modal-body"><div class="te">Please wait...</div></div>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-2" role="dialog" id="AddProductDescr" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="false">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h2> Agregar Productos </h2>
            </div>
            <div class="modal-body"><div class="te">Please wait...</div></div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>*@
    <script type="text/javascript">

        //$(window).keydown('shiftkey', function (e) {
        //    e.preventDefault();
        //    var $link = $(this);
        //    var title = $link.text();
        //    $('#AddProduct .modal-title').html(title);
        //    var url = $(this).attr('href');
        //    //if ((e.metaKey || e.shiftKey)) {
        //    $("#AddProduct").modal('show');
        //    //}
        //    //else {
        //    //        $.get(url, function (data) {
        //    //            $('#AddProduct .te').html(data);
        //    //            $('#AddProduct').modal();
        //    //        }).success(function () { $('input:text:visible:first').focus(); });

        //    //    }
        //});

        $(document).ready(function () {
            $("body").on("click", "a.dialog-window", null, function (e) {
                e.preventDefault();
                var $link = $(this);
                var title = $link.text();
                $('#AddProduct .modal-title').html(title);
                var url = $(this).attr('href');
                if (url.indexOf('#') == 0) {
                    $('#AddProduct').modal('show');
                }
                else {
                    $.get(url, function (data) {
                        $('#AddProduct .te').html(data);
                        $('#AddProduct').modal();
                    }).success(function () { $('input:text:visible:first').focus(); });
                }
            });
        });

        $(document).ready(function () {
            $("body").on("click", "a.dialog-window", null, function (e) {
                e.preventDefault();
                var $link = $(this);
                var title = $link.text();
                $('#AddProductDescr .modal-title').html(title);
                var url = $(this).attr('href');
                if (url.indexOf('#') == 0) {
                    $('#AddProductDescr').modal('show');
                }
                else {
                    $.get(url, function (data) {
                        $('#AddProductDescr .te').html(data);
                        $('#AddProductDescr').modal();
                    }).success(function () { $('input:text:visible:first').focus(); });
                }
            });
        });


        function Confirm() {
        var input = $("<input/>");         
        input.attr("type", "hidden").attr("name", "confirm_value");
            if (confirm("SI QUIERE ENVIAR CON PROFORMA/PDF PRESIONE ACEPTAR, SOLO PDF PRESIONE CANCELAR!!!")) {
            input.val("Yes");
        } else {
            input.val("No");
        }
        $("form")[0].appendChild(input[0]);
        };


    @*$(document).ready(function () {

            var status = '@ViewBag.Status';
            if (status) {
                alert("success");
            } else {
                alert("error");
            }
    });*@

    //$(document).ready(function () {
    //    var r = confirm("Are you sure you want to submit?");
    //    if (r == false) {
    //        return false;
    //    }
    //});
    //$(document).ready(function () {
    //    $('#AddProduct').modal('show');
    //});

    //$(window).on('load', function () {
    //   // e.preventDefault();
    //    var $link = $(this);
    //    var title = $link.text();
    //    $('#AddProduct').modal('show');


    //});

    </script>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
                $(function () {
                  alert("@ViewBag.Message")
                });
        </script>
    }
}
    




